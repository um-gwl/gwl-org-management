const path = require('path');
const webpack = require('webpack');
const HtmlWebpackPlugin = require('html-webpack-plugin');
const CopyWebpackPlugin = require('copy-webpack-plugin');
const base = require('./webpack.base.js');
// eslint-disable-next-line import/no-extraneous-dependencies
const ExtractTextPlugin = require('extract-text-webpack-plugin');
const WebpackBuildNotifierPlugin = require('webpack-build-notifier');

const getConfig = (moduleName, port) => ({
  devtool: 'eval-source-map',
  entry: {
    hot: [
      // bundle the client for webpack-dev-server
      // and connect to the provided endpoint
      'react-hot-loader/patch',
      // bundle the client for hot reloading
      // only- means to only hot reload for successful updates
      'webpack/hot/only-dev-server',
      `webpack-dev-server/client?http://0.0.0.0:${port}`,
      // activate HMR for React
    ],
    main: [
      // the entry point of our app
      './src/index.js',
    ],
  },
  output: {
    path: `${__dirname}/__build__${moduleName || ''}`,
    filename: '[name].[hash].js',
    chunkFilename: '[name].[hash].chunk.js',
    publicPath: '/',
  },
  // target: 'web',
  cache: true,
  recordsPath: path.join(__dirname, 'records.json'),
  module: base,
  resolve: {
    unsafeCache: true,
    extensions: ['.js'],
    alias: {
      src: path.resolve(__dirname, '../src'),
    },
    modules: ['node_modules',
      path.join(__dirname, '../src'),
    ],
    cacheWithContext: false,
  },
  plugins: [
    new WebpackBuildNotifierPlugin({
      title: 'GoodWorks management app',
    }),
    new webpack.HotModuleReplacementPlugin(),
    new webpack.SourceMapDevToolPlugin(),
    new webpack.NamedModulesPlugin(),
    new webpack.DefinePlugin({
      'process.env': {
        NODE_ENV: JSON.stringify(process.env.NODE_ENV || 'development'),
      },
    }),
    new ExtractTextPlugin({
      filename: '[name].css',
      allChunks: true,
      disable: true,
      ignoreOrder: true,
    }),
    new HtmlWebpackPlugin({
      template: 'public/index.html',
      inject: true, // Inject all files that are generated by webpack, e.g. bundle.js
    }),

    new CopyWebpackPlugin([
      { from: 'src/logo.svg', to: 'public/favicon-32x32.svg' },
      { from: 'src/favicon.ico', to: 'public/favicon-32x32.ico' },
    ], { copyUnmodified: true }),
  ],
  externals: {
    cheerio: 'window',
    'react/addons': true,
    'react/lib/ExecutionEnvironment': true,
    'react/lib/ReactContext': true,
  },
});

module.exports = getConfig;
